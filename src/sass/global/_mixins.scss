$max-width: 1400px;
$min-width: 320px; // define breakpoints
$tablet-width: 768px;
$desktop-width: 1142px;

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}
@mixin rotate($param) {
	-ms-transform: rotate($param); /* IE 9 */
    -webkit-transform: rotate($param); /* Chrome, Safari, Opera */
    transform: rotate($param);
}

@mixin limitHeight($height){
      height: $height;
      overflow:hidden;
      @include mobile {
            height: auto;
            overflow: initial;
      }
}

/*Mobile, tablet, desktop media queries Use by just saying @include and adding its styles inside*/

@mixin not-mobile {
     @media (min-width: #{$tablet-width}){
        @content;
    }
}

@mixin mobile {
     @media (max-width: #{$tablet-width - 1px}){
        @content;
    }
}
@mixin tablet {
     @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}){
        @content;
    }
}
@mixin desktop {
     @media (min-width: #{$desktop-width}){
        @content;
    }
}
@mixin not-desktop{
     @media (max-width: #{$desktop-width - 1px}){
        @content;
    }
}
@mixin greater-desktop{
     @media (min-width: 1400px){
        @content;
    }
}
@mixin heading-font-size($fontdesktop,$fonttablet,$fontmobile){
    @include desktop{
        font-size: $fontdesktop;
    }
    @include tablet{
        font-size: $fonttablet;
    }
    @include mobile{
        font-size: $fontmobile;
    }
}
@mixin heading-line-height($lineheightdesktop,$lineheighttablet,$lineheightmobile){
    @include desktop{
        line-height: $lineheightdesktop;
    }
    @include tablet{
        line-height: $lineheighttablet;
    }
    @include mobile{
        line-height: $lineheightmobile;
    }
}
@mixin family-style($weight,$color){
    font-family: $weight;
    color: $color;
}

@mixin heading-padding($padDesk,$padTab,$padMob){
   @include desktop{
        padding: $padDesk;
    }
    @include tablet{
        padding: $padTab;
    }
    @include mobile{
        padding: $padMob;
    }
}

@mixin padding-reset{
   padding:0;
}

@mixin margin-reset{
   margin:0;
}

@mixin image-icon{
  width: 100px;
  height: 100px;
}

@mixin theme($name, $primarycolor, $secondarycolordark, $secondarycolorlight) {
  $primary: $primarycolor;
  $secondarycolordark: $secondarycolordark;
  $secondarycolorlight: $secondarycolorlight;
  $secondarycolorlight80: rgba($secondarycolorlight, 0.8);
  $secondarycolorlight60: rgba($secondarycolorlight, 0.6);
  $secondarycolorlight40: rgba($secondarycolorlight, 0.4);
  $secondarycolorlight20: rgba($secondarycolorlight, 0.2);


  .#{$name} {
    color: $gray-darker;
    a {
        color: $light;
    }
    .feature li{
       &:before {
          content: "\e914";
          font-family: 'InformaIcons';
          position: absolute;
          left: -32px;
          top: 0;
          font-size: 16px;
          color: $secondarycolorlight;
          @include border-radius(50%);
          font-weight: normal;
       }
       a{
          color: $primary !important;
       }
    }
    .btn {
        width: 180px;
        background: transparent;
        color: $btn-default-color;
        border-color: $primary;
        border-radius: $border-radius-base;
        border-width: 2px;
    }
    .btn-showMore {
        background: none;
        width: 160px;
        padding: 10px 0;
        margin: 0 auto;
        text-align: left;
        color: $grey-color1;
        border: none;
        border-bottom: 2px solid $secondarycolorlight;
        display: block;
        cursor: pointer;
        position: relative;
        @include mobile {
            width: 50%;
            padding-bottom: 35px;
            text-align: center;
        }
        &:after {
            font-family: 'InformaIcons';
            content: '\e912';
            position: absolute;
            color: $secondarycolorlight;
            right: 0;
            height: 30px;
            width: 30px;
            text-align: center;
            border-radius: 14px;
            font-size: 30px;
            top: -2px;
            @include mobile {
                right: 50%;
                margin-right: -15px;
                top: 25px;
            }
        }
        &:hover{
          border-bottom: 2px solid $primarycolor;
        }
        &:focus {
            outline: 0;
        }
        span.more {
            display: block;
        }
        span.less {
            display: none;
        }
    }
    .recomended-wrapper{
        .btn-container .btn-default{
          border: 2px solid $secondarycolorlight;
          &:after{
            color:$secondarycolorlight;
          }
          &:hover{
            border: 2px solid $primarycolor;
          }
        }
    }
    .headline-list{
      a{
        color: $secondarycolorlight80;
      }
    }
    .btn-default{
        min-width: 230px;
       text-align: left;
       padding-top: 15px;
       padding-bottom: 15px;
       border-color: $primary;
       position: relative;
       &:after{
         content: "\e900";
         font-family: 'InformaIcons';
         right: 15px;
         font-weight: bold;
         position: absolute;
         color:$primary;
       }
       &:hover{
          border: 2px solid $secondarycolordark;
       }
    }
    .btn-container{
      .btn-default{
          border: 2px solid $primary;
          &:after {
            color: $primary;
          }
          &:hover{
            border: 2px solid $secondarycolordark;
          }
      }
    }
    .btn-primary{
       text-align: left;
       width:100%;
       padding-top: 15px;
       padding-bottom: 15px;
       border-color: $primary;
       background-color: $primary;
       color: $white;
       position: relative;
       &:after{
         content: "\e900";
         font-family: 'InformaIcons';
         right: 15px;
         font-weight: bold;
         position: absolute;
       }
       &:hover{
        background-color: $secondarycolorlight;
        border-color: $secondarycolorlight;
        color: $white;
       }
    }
		.btn-previous {
				color: $white;
				 min-width: 180px;
				 text-align: right;
				 padding-top: 15px;
				 padding-bottom: 15px;
				 border-color: $gray-light;
				 background:  $gray-light;
				 position: relative;
					z-index: 9;
				 &:before{
					 content: "\e903";
					 font-family: 'InformaIcons';
					 left: 15px;
					 font-weight: bold;
					 position: absolute;
					 //color:$primary;
				 }
				 &:hover{
						border-color: $gray-light;
				 }
		}
    #contactus-section{
      a{
        color: $primary;
      }
      .subscribe-link{
        background: $primary url(/Static/images/subscribe/subscribe.png) no-repeat 5% 50%;
        &:after{
          color: $light;
        }
      }
    }
    .open-quote{
      color: $secondarycolorlight80;
    }
    .component {
        padding: 0;
        color: $text-color;
        .component-content {
            padding: 0;
            display: block;
            height: 100%;
            background-color: transparent;
        }
        &.boxed {
            .component-content {
                padding: $gutterside;
                background-color: $btn-default-color;
            }
        }
        a {
            color: $btn-default-color;
            &:hover {
                color: $btn-default-color;
            }
        }
        h1 {
            font-weight: bold;
        }
        h1,
        h2,
        h3 {
            margin-top: 0;
        }
        .btn {
            color: $btn-default-color;
            &:hover {
                color: $btn-default-color;
            }
        }
    }
    ul.slick-dots {
      li.slick-active{
        background: $primary !important;
      }
    }
    .card-container {
        padding-top: $gutterside;
        .component {
            padding: 0 $gutterside $gutterside 0;
        }
        & > .container {
            padding-right: 0;
        }
    }
    //All common CSS which are themeable can be written here
    .demo-item {
      height: 100px;
      background-color: $secondarycolorlight80;
    }

    .icon-tick {
      &:before {
        color: $secondarycolorlight;
      }
    }

  }
}


@mixin linx ($link, $visit, $hover, $active) {
  a {
    color: $link;
    &:visited {
      color: $visit;
    }
    &:hover {
      color: $hover;
    }
    &:active {
      color: $active;
    }
  }
}

@mixin pad ($pads...) {
  padding: $pads;
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
}

@mixin abs-pos ($top, $right, $bottom , $left , $pos) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: $pos;
}

@mixin line-height($lineHeight){
    line-height: $lineHeight;
}

@mixin width-height {
    width: 100%;
    height: 100%;
}

@mixin animation($value) {
  -webkit-animation: $value;
  -moz-animation: $value;
  -ms-animation: $value;
  -o-animation: $value;
  animation: $value;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content
  }
  @-moz-keyframes #{$name} {
    @content
  }
  @-ms-keyframes #{$name} {
    @content
  }
  @-o-keyframes #{$name} {
    @content
  }
  @keyframes #{$name} {
    @content
  }
}

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin button-bg($bg) {
  background: $bg;
  &:hover {
    background:darken($bg,8%);
  }
  &:active {
    background:darken($bg,25%);
  }
}

@mixin border-solid($width, $color) {
    border: #{$width} solid #{$color};
}

$properties: (margin, padding);
@mixin set-reset-value($side, $value) {
    @each $prop in $properties {
        $prop : 0;
    }
}
