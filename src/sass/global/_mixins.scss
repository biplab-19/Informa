$max-width: 1400px;
$min-width: 320px; // define breakpoints
$tablet-width: 768px;
$desktop-width: 1142px;

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}
@mixin rotate($param) {
	-ms-transform: rotate($param); /* IE 9 */
    -webkit-transform: rotate($param); /* Chrome, Safari, Opera */
    transform: rotate($param);
}

@mixin limitHeight($height){
      height: $height;
      overflow:hidden;
      @include mobile {
            height: auto;
            overflow: initial;
      }
}

/*Mobile, tablet, desktop media queries Use by just saying @include and adding its styles inside*/

@mixin not-mobile {
     @media (min-width: #{$tablet-width}){
        @content;
    }
}

@mixin mobile {
     @media (max-width: #{$tablet-width - 1px}){
        @content;
    }
}
@mixin tablet {
     @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}){
        @content;
    }
}
@mixin desktop {
     @media (min-width: #{$desktop-width}){
        @content;
    }
}
@mixin not-desktop{
     @media (max-width: #{$desktop-width - 1px}){
        @content;
    }
}
@mixin heading-font-size($fontdesktop,$fonttablet,$fontmobile){
    @include desktop{
        font-size: $fontdesktop;
    }
    @include tablet{
        font-size: $fonttablet;
    }
    @include mobile{
        font-size: $fontmobile;
    }
}
@mixin heading-line-height($lineheightdesktop,$lineheighttablet,$lineheightmobile){
    @include desktop{
        line-height: $lineheightdesktop;
    }
    @include tablet{
        line-height: $lineheighttablet;
    }
    @include mobile{
        line-height: $lineheightmobile;
    }
}
@mixin family-style($weight,$color){
    font-family: $weight;
    color: $color;
}

@mixin heading-padding($padDesk,$padTab,$padMob){
   @include desktop{
        padding: $padDesk;
    }
    @include tablet{
        padding: $padTab;
    }
    @include mobile{
        padding: $padMob;
    }
}

@mixin padding-reset{
   padding:0;
}

@mixin margin-reset{
   margin:0;
}

@mixin image-icon{
  width: 100px;
  height: 100px;
}

@mixin theme($name, $primarycolor, $secondarycolordark, $secondarycolorlight) {
  $primary: $primarycolor;
  $secondarycolordark: $secondarycolordark;
  $secondarycolorlight: $secondarycolorlight;
  $secondarycolorlight80: rgba($secondarycolorlight, 0.8);
  $secondarycolorlight60: rgba($secondarycolorlight, 0.6);
  $secondarycolorlight40: rgba($secondarycolorlight, 0.4);
  $secondarycolorlight20: rgba($secondarycolorlight, 0.2);


  .#{$name} {

    //All common CSS which are themeable can be written here
    .demo-item {
      height: 100px;
      background-color: $secondarycolorlight80;
    }

    //Buttons
    .btn {
        min-width: 180px;
        padding: 15px;
        position: relative;
         &:after{
           content: "\e900";
           font-family: 'InformaIcons';
           right: 15px;
           font-weight: bold;
           position: absolute;
           top: 50%;
           transform: translateY(-50%);
         }
        &.btn-primary {
            color: $white;
            background-color: $primary;
            &:hover, &:active {
                background-color: $secondarycolorlight;
            }
            &:after {
                color: $white;
            }
            &.disable {
                background-color: $grey-color7;
            }
        }
        &.btn-secondary {
            color: #6a7285; //To Be Changed Based On typo
            border: 1px solid $primary;
            &:hover, &:active {
                border: 1px solid $secondarycolorlight;
            }
            &:after {
                color: $primary;
            }
            &.disable {
                border: 1px solid $grey-color7;
            }
        }
    }


    a {
      color: $secondarycolorlight;
      text-decoration: underline;
      &:hover, &:active {
        color: $secondarycolordark;
        text-decoration: underline;
      }
      &:visited {
        color: $secondarycolorlight;
        text-decoration: none;
      }
    }
  }
}


@mixin linx ($link, $visit, $hover, $active) {
  a {
    color: $link;
    &:visited {
      color: $visit;
    }
    &:hover {
      color: $hover;   
    }
    &:active {
      color: $active;
    }
  }
}

@mixin pad ($pads...) {
  padding: $pads;
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
}

@mixin abs-pos ($top, $right, $bottom , $left , $pos) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: $pos;
}

@mixin line-height($lineHeight){
    line-height: $lineHeight;
}

@mixin width-height {
    width: 100%;
    height: 100%;
}

@mixin animation($value) {
  -webkit-animation: $value;
  -moz-animation: $value;
  -ms-animation: $value;
  -o-animation: $value;
  animation: $value;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content
  }
  @-moz-keyframes #{$name} {
    @content
  }
  @-ms-keyframes #{$name} {
    @content
  }
  @-o-keyframes #{$name} {
    @content
  }
  @keyframes #{$name} {
    @content
  }
}

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin button-bg($bg) {
  background: $bg;
  &:hover {
    background:darken($bg,8%);
  }
  &:active {
    background:darken($bg,25%);
  } 
}

@mixin border-solid($width, $color) {
    border: #{$width} solid #{$color};
}

$properties: (margin, padding);
@mixin set-reset-value($side, $value) {
    @each $prop in $properties {
        $prop : 0;
    }
}

